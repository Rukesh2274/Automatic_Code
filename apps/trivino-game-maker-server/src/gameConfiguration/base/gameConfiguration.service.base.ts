/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GameConfiguration as PrismaGameConfiguration,
  Game as PrismaGame,
} from "@prisma/client";

export class GameConfigurationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GameConfigurationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gameConfiguration.count(args);
  }

  async gameConfigurations(
    args: Prisma.GameConfigurationFindManyArgs
  ): Promise<PrismaGameConfiguration[]> {
    return this.prisma.gameConfiguration.findMany(args);
  }
  async gameConfiguration(
    args: Prisma.GameConfigurationFindUniqueArgs
  ): Promise<PrismaGameConfiguration | null> {
    return this.prisma.gameConfiguration.findUnique(args);
  }
  async createGameConfiguration(
    args: Prisma.GameConfigurationCreateArgs
  ): Promise<PrismaGameConfiguration> {
    return this.prisma.gameConfiguration.create(args);
  }
  async updateGameConfiguration(
    args: Prisma.GameConfigurationUpdateArgs
  ): Promise<PrismaGameConfiguration> {
    return this.prisma.gameConfiguration.update(args);
  }
  async deleteGameConfiguration(
    args: Prisma.GameConfigurationDeleteArgs
  ): Promise<PrismaGameConfiguration> {
    return this.prisma.gameConfiguration.delete(args);
  }

  async getGame(parentId: string): Promise<PrismaGame | null> {
    return this.prisma.gameConfiguration
      .findUnique({
        where: { id: parentId },
      })
      .game();
  }
}
